// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant.Models;

#nullable disable

namespace Restaurant.Migrations
{
    [DbContext(typeof(IdentityDataContext))]
    partial class IdentityDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Restaurant.Data.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Il")
                        .HasColumnType("longtext");

                    b.Property<string>("Ilce")
                        .HasColumnType("longtext");

                    b.Property<string>("Koy")
                        .HasColumnType("longtext");

                    b.Property<string>("Mahalle")
                        .HasColumnType("longtext");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int?>("No")
                        .HasColumnType("int");

                    b.Property<string>("Sokak")
                        .HasColumnType("longtext");

                    b.Property<string>("Tarif")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("Adresler");
                });

            modelBuilder.Entity("Restaurant.Data.Bildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("longtext");

                    b.Property<string>("Baslik")
                        .HasColumnType("longtext");

                    b.Property<int?>("KasaId")
                        .HasColumnType("int");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int?>("MutfakId")
                        .HasColumnType("int");

                    b.Property<bool?>("Okundu")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KasaId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("MutfakId");

                    b.HasIndex("PersonelId");

                    b.ToTable("Bildirimler");
                });

            modelBuilder.Entity("Restaurant.Data.Durum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .HasColumnType("longtext");

                    b.Property<int?>("SiparisId")
                        .HasColumnType("int");

                    b.Property<string>("Yer")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Zaman")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.ToTable("Durumlar");
                });

            modelBuilder.Entity("Restaurant.Data.Kampanya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Durum")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("GecerlilikTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Indirim")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .HasColumnType("longtext");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("Kampanyalar");
                });

            modelBuilder.Entity("Restaurant.Data.Kasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Bakiye")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Kasalar");
                });

            modelBuilder.Entity("Restaurant.Data.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tur")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("Restaurant.Data.Malzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Fiyat")
                        .IsRequired()
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("StokId")
                        .HasColumnType("int");

                    b.Property<string>("Turu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("StokId");

                    b.ToTable("Malzemeler");
                });

            modelBuilder.Entity("Restaurant.Data.MalzemeGirdi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GirdiId")
                        .HasColumnType("int");

                    b.Property<int?>("MalzemeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GirdiId");

                    b.HasIndex("MalzemeId");

                    b.ToTable("MalzemeGirdiler");
                });

            modelBuilder.Entity("Restaurant.Data.Masa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Durum")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Kapasite")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .HasColumnType("longtext");

                    b.Property<int?>("OdenenTutar")
                        .HasColumnType("int");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Temizlik")
                        .HasColumnType("longtext");

                    b.Property<int?>("Tutar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("Masalar");
                });

            modelBuilder.Entity("Restaurant.Data.MasaOzellik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MasaId")
                        .HasColumnType("int");

                    b.Property<int>("OzellikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasaId");

                    b.HasIndex("OzellikId");

                    b.ToTable("MasaOzellikler");
                });

            modelBuilder.Entity("Restaurant.Data.MasaRezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MasaId")
                        .HasColumnType("int");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasaId");

                    b.HasIndex("RezervasyonId");

                    b.ToTable("MasaRezervasyonlar");
                });

            modelBuilder.Entity("Restaurant.Data.MasaSiparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MasaId")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasaId");

                    b.HasIndex("SiparisId");

                    b.ToTable("MasaSiparisler");
                });

            modelBuilder.Entity("Restaurant.Data.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Detay")
                        .HasColumnType("longtext");

                    b.Property<int?>("Fiyat")
                        .HasColumnType("int");

                    b.Property<string>("Fotograf")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IndirimliFiyat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menuler");
                });

            modelBuilder.Entity("Restaurant.Data.MenuUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("UrunId");

                    b.ToTable("MenuUrunler");
                });

            modelBuilder.Entity("Restaurant.Data.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("Dogumtarihi")
                        .HasColumnType("date");

                    b.Property<string>("Eposta")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly?>("KayitTarihi")
                        .HasColumnType("date");

                    b.Property<int?>("MasaId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MasaId");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("Restaurant.Data.Mutfak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Mutfaklar");
                });

            modelBuilder.Entity("Restaurant.Data.Ozellik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Ozellikler");
                });

            modelBuilder.Entity("Restaurant.Data.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("BaslamaTarihi")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<bool?>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly?>("DogumTarihi")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("Maas")
                        .IsRequired()
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PersonelFotograf")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonelParola")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("Restaurant.Data.Rezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("KisiSayisi")
                        .HasColumnType("int");

                    b.Property<string>("Onay")
                        .HasColumnType("longtext");

                    b.Property<string>("Talep")
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("TalepTarihi")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("Tarih")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("Restaurant.Data.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("Restaurant.Data.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("KasaId")
                        .HasColumnType("int");

                    b.Property<int?>("MutfakId")
                        .HasColumnType("int");

                    b.Property<string>("Not")
                        .HasColumnType("longtext");

                    b.Property<string>("OdemeDurum")
                        .HasColumnType("longtext");

                    b.Property<string>("OdemeTuru")
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("Tarih")
                        .HasColumnType("date");

                    b.Property<int?>("Tutar")
                        .HasColumnType("int");

                    b.Property<int?>("YorumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KasaId");

                    b.HasIndex("MutfakId");

                    b.HasIndex("YorumId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("Restaurant.Data.SiparisMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("SiparisId");

                    b.ToTable("SiparisMenuler");
                });

            modelBuilder.Entity("Restaurant.Data.SiparisUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.HasIndex("UrunId");

                    b.ToTable("SiparisUrunler");
                });

            modelBuilder.Entity("Restaurant.Data.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MalzemeId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxStok")
                        .HasColumnType("int");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<int?>("MinStok")
                        .HasColumnType("int");

                    b.Property<int?>("TedarikciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TedarikciId");

                    b.ToTable("Stoklar");
                });

            modelBuilder.Entity("Restaurant.Data.StokGirdi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlısFiyati")
                        .HasColumnType("int");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TedarikciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TedarikciId");

                    b.ToTable("StokGirdiler");
                });

            modelBuilder.Entity("Restaurant.Data.Tedarikci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tedarikciler");
                });

            modelBuilder.Entity("Restaurant.Data.Teslimat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Cıkıs")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OdemeDurum")
                        .HasColumnType("longtext");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("TeslimDurum")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Varis")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("Teslimatlar");
                });

            modelBuilder.Entity("Restaurant.Data.TeslimatAdres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdresId")
                        .HasColumnType("int");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Tarih")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.HasIndex("MusteriId");

                    b.ToTable("TeslimatAdresler");
                });

            modelBuilder.Entity("Restaurant.Data.TeslimatSiparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("OluşturmaTarihi")
                        .HasColumnType("date");

                    b.Property<int?>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int?>("TeslimatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.HasIndex("SiparisId");

                    b.HasIndex("TeslimatId");

                    b.ToTable("TeslimatSiparisler");
                });

            modelBuilder.Entity("Restaurant.Data.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acıklama")
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .HasColumnType("longtext");

                    b.Property<string>("Aktif")
                        .HasColumnType("longtext");

                    b.Property<string>("Detay")
                        .HasColumnType("longtext");

                    b.Property<int?>("Fiyat")
                        .HasColumnType("int");

                    b.Property<string>("Fotograf")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IndirimliFiyat")
                        .HasColumnType("int");

                    b.Property<int?>("KategorId")
                        .HasColumnType("int");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("Restaurant.Data.UrunMalzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MalzemeId")
                        .HasColumnType("int");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunMalzemeler");
                });

            modelBuilder.Entity("Restaurant.Data.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Baslik")
                        .HasColumnType("longtext");

                    b.Property<int?>("Begenme")
                        .HasColumnType("int");

                    b.Property<bool?>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Icerik")
                        .HasColumnType("longtext");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int?>("Puan")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Tarih")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("Restaurant.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Restaurant.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Restaurant.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Restaurant.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Restaurant.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Restaurant.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Restaurant.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Restaurant.Data.Adres", b =>
                {
                    b.HasOne("Restaurant.Data.Musteri", "Musteri")
                        .WithMany("Adresler")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Restaurant.Data.Bildirim", b =>
                {
                    b.HasOne("Restaurant.Data.Kasa", "Kasa")
                        .WithMany("Bildirimlers")
                        .HasForeignKey("KasaId");

                    b.HasOne("Restaurant.Data.Musteri", "Musteri")
                        .WithMany("Bildirimlers")
                        .HasForeignKey("MusteriId");

                    b.HasOne("Restaurant.Data.Mutfak", "Mutfak")
                        .WithMany("Bildirimlers")
                        .HasForeignKey("MutfakId");

                    b.HasOne("Restaurant.Data.Personel", "Personel")
                        .WithMany("Bildirimlers")
                        .HasForeignKey("PersonelId");

                    b.Navigation("Kasa");

                    b.Navigation("Musteri");

                    b.Navigation("Mutfak");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Restaurant.Data.Durum", b =>
                {
                    b.HasOne("Restaurant.Data.Siparis", "Siparis")
                        .WithMany("Durumlars")
                        .HasForeignKey("SiparisId");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Restaurant.Data.Kampanya", b =>
                {
                    b.HasOne("Restaurant.Data.Musteri", "Musteri")
                        .WithMany("Kampanyalars")
                        .HasForeignKey("MusteriId");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Restaurant.Data.Malzeme", b =>
                {
                    b.HasOne("Restaurant.Data.Stok", "Stok")
                        .WithMany("Malzemelers")
                        .HasForeignKey("StokId");

                    b.Navigation("Stok");
                });

            modelBuilder.Entity("Restaurant.Data.MalzemeGirdi", b =>
                {
                    b.HasOne("Restaurant.Data.StokGirdi", "Girdi")
                        .WithMany()
                        .HasForeignKey("GirdiId");

                    b.HasOne("Restaurant.Data.Malzeme", "Malzeme")
                        .WithMany()
                        .HasForeignKey("MalzemeId");

                    b.Navigation("Girdi");

                    b.Navigation("Malzeme");
                });

            modelBuilder.Entity("Restaurant.Data.Masa", b =>
                {
                    b.HasOne("Restaurant.Data.Personel", "Personel")
                        .WithMany("Masalars")
                        .HasForeignKey("PersonelId");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Restaurant.Data.MasaOzellik", b =>
                {
                    b.HasOne("Restaurant.Data.Masa", "Masa")
                        .WithMany()
                        .HasForeignKey("MasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Data.Ozellik", "Ozellik")
                        .WithMany()
                        .HasForeignKey("OzellikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masa");

                    b.Navigation("Ozellik");
                });

            modelBuilder.Entity("Restaurant.Data.MasaRezervasyon", b =>
                {
                    b.HasOne("Restaurant.Data.Masa", "Masa")
                        .WithMany()
                        .HasForeignKey("MasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Data.Rezervasyon", "Rezervasyon")
                        .WithMany()
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masa");

                    b.Navigation("Rezervasyon");
                });

            modelBuilder.Entity("Restaurant.Data.MasaSiparis", b =>
                {
                    b.HasOne("Restaurant.Data.Masa", "Masa")
                        .WithMany()
                        .HasForeignKey("MasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Data.Siparis", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masa");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Restaurant.Data.MenuUrun", b =>
                {
                    b.HasOne("Restaurant.Data.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Data.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Restaurant.Data.Musteri", b =>
                {
                    b.HasOne("Restaurant.Data.Masa", "Masa")
                        .WithMany("Musterilers")
                        .HasForeignKey("MasaId");

                    b.Navigation("Masa");
                });

            modelBuilder.Entity("Restaurant.Data.Personel", b =>
                {
                    b.HasOne("Restaurant.Data.Rol", "Rol")
                        .WithMany("Personellers")
                        .HasForeignKey("RolId");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Restaurant.Data.Siparis", b =>
                {
                    b.HasOne("Restaurant.Data.Kasa", "Kasa")
                        .WithMany("Siparislers")
                        .HasForeignKey("KasaId");

                    b.HasOne("Restaurant.Data.Mutfak", "Mutfak")
                        .WithMany("Siparislers")
                        .HasForeignKey("MutfakId");

                    b.HasOne("Restaurant.Data.Yorum", "Yorum")
                        .WithMany("Siparislers")
                        .HasForeignKey("YorumId");

                    b.Navigation("Kasa");

                    b.Navigation("Mutfak");

                    b.Navigation("Yorum");
                });

            modelBuilder.Entity("Restaurant.Data.SiparisMenu", b =>
                {
                    b.HasOne("Restaurant.Data.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Data.Siparis", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Restaurant.Data.SiparisUrun", b =>
                {
                    b.HasOne("Restaurant.Data.Siparis", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Data.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Restaurant.Data.Stok", b =>
                {
                    b.HasOne("Restaurant.Data.Tedarikci", "Tedarikci")
                        .WithMany("Stoklars")
                        .HasForeignKey("TedarikciId");

                    b.Navigation("Tedarikci");
                });

            modelBuilder.Entity("Restaurant.Data.StokGirdi", b =>
                {
                    b.HasOne("Restaurant.Data.Tedarikci", "Tedarikci")
                        .WithMany("StokGirdilers")
                        .HasForeignKey("TedarikciId");

                    b.Navigation("Tedarikci");
                });

            modelBuilder.Entity("Restaurant.Data.Teslimat", b =>
                {
                    b.HasOne("Restaurant.Data.Personel", "Personel")
                        .WithMany("Teslimatlars")
                        .HasForeignKey("PersonelId");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Restaurant.Data.TeslimatAdres", b =>
                {
                    b.HasOne("Restaurant.Data.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId");

                    b.HasOne("Restaurant.Data.Musteri", "Musteri")
                        .WithMany("TeslimatAdreslers")
                        .HasForeignKey("MusteriId");

                    b.Navigation("Adres");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Restaurant.Data.TeslimatSiparis", b =>
                {
                    b.HasOne("Restaurant.Data.Musteri", "Musteri")
                        .WithMany("TeslimatSiparislers")
                        .HasForeignKey("MusteriId");

                    b.HasOne("Restaurant.Data.Siparis", "Siparis")
                        .WithMany("TeslimatSiparislers")
                        .HasForeignKey("SiparisId");

                    b.HasOne("Restaurant.Data.Teslimat", "Teslimat")
                        .WithMany("TeslimatSiparislers")
                        .HasForeignKey("TeslimatId");

                    b.Navigation("Musteri");

                    b.Navigation("Siparis");

                    b.Navigation("Teslimat");
                });

            modelBuilder.Entity("Restaurant.Data.Urun", b =>
                {
                    b.HasOne("Restaurant.Data.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Restaurant.Data.UrunMalzeme", b =>
                {
                    b.HasOne("Restaurant.Data.Malzeme", "Malzeme")
                        .WithMany()
                        .HasForeignKey("MalzemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Data.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Malzeme");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Restaurant.Data.Yorum", b =>
                {
                    b.HasOne("Restaurant.Data.Musteri", "Musteri")
                        .WithMany("Yorumlars")
                        .HasForeignKey("MusteriId");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Restaurant.Data.Kasa", b =>
                {
                    b.Navigation("Bildirimlers");

                    b.Navigation("Siparislers");
                });

            modelBuilder.Entity("Restaurant.Data.Masa", b =>
                {
                    b.Navigation("Musterilers");
                });

            modelBuilder.Entity("Restaurant.Data.Musteri", b =>
                {
                    b.Navigation("Adresler");

                    b.Navigation("Bildirimlers");

                    b.Navigation("Kampanyalars");

                    b.Navigation("TeslimatAdreslers");

                    b.Navigation("TeslimatSiparislers");

                    b.Navigation("Yorumlars");
                });

            modelBuilder.Entity("Restaurant.Data.Mutfak", b =>
                {
                    b.Navigation("Bildirimlers");

                    b.Navigation("Siparislers");
                });

            modelBuilder.Entity("Restaurant.Data.Personel", b =>
                {
                    b.Navigation("Bildirimlers");

                    b.Navigation("Masalars");

                    b.Navigation("Teslimatlars");
                });

            modelBuilder.Entity("Restaurant.Data.Rol", b =>
                {
                    b.Navigation("Personellers");
                });

            modelBuilder.Entity("Restaurant.Data.Siparis", b =>
                {
                    b.Navigation("Durumlars");

                    b.Navigation("TeslimatSiparislers");
                });

            modelBuilder.Entity("Restaurant.Data.Stok", b =>
                {
                    b.Navigation("Malzemelers");
                });

            modelBuilder.Entity("Restaurant.Data.Tedarikci", b =>
                {
                    b.Navigation("StokGirdilers");

                    b.Navigation("Stoklars");
                });

            modelBuilder.Entity("Restaurant.Data.Teslimat", b =>
                {
                    b.Navigation("TeslimatSiparislers");
                });

            modelBuilder.Entity("Restaurant.Data.Yorum", b =>
                {
                    b.Navigation("Siparislers");
                });
#pragma warning restore 612, 618
        }
    }
}
